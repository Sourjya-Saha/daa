#include <stdio.h>

void knapsack(int n, float m, float p[], float w[], char mode[]) {
    float x[20], totalProfit = 0.0, U = m;
    int i, j;
    float temp;

    // Sorting based on mode
    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            int cond = 0;
            if (mode[0] == 'p') cond = (p[i] < p[j]);                  // max profit
            else if (mode[0] == 'w') cond = (w[i] > w[j]);             // min weight
            else if (mode[0] == 'r') cond = (p[i] / w[i] < p[j] / w[j]); // max P/W

            if (cond) {
                // Swap profit
                temp = p[i]; p[i] = p[j]; p[j] = temp;
                // Swap weight
                temp = w[i]; w[i] = w[j]; w[j] = temp;
            }
        }
    }

    // Initialize x
    for (i = 0; i < n; i++) x[i] = 0.0;

    // Greedy selection
    for (i = 0; i < n; i++) {
        if (w[i] > U) break;
        x[i] = 1.0;
        totalProfit += p[i];
        U -= w[i];
    }

    if (i < n) {
        x[i] = U / w[i];
        totalProfit += x[i] * p[i];
    }

    // Output
    printf("x1\tx2\tx3\tΣw.xi\tΣp.xi\n");
    for (i = 0; i < n; i++) {
        printf("%.2f\t", x[i]);
    }

    float sumWeight = 0.0;
    for (i = 0; i < n; i++) sumWeight += w[i] * x[i];
    printf("%.1f\t%.1f\n\n", sumWeight, totalProfit);
}

int main() {
    int n, i;
    float m, p[20], w[20];

    printf("Enter n, m: ");
    scanf("%d %f", &n, &m);

    printf("Enter profits (p1, p2, ...): ");
    for (i = 0; i < n; i++) scanf("%f", &p[i]);

    printf("Enter weights (w1, w2, ...): ");
    for (i = 0; i < n; i++) scanf("%f", &w[i]);

    printf("\nWith respect to maximum profit\n");
    knapsack(n, m, p, w, "profit");

    printf("With respect to minimum weight\n");
    knapsack(n, m, p, w, "weight");

    printf("With respect to P/W\n");
    knapsack(n, m, p, w, "ratio");

    return 0;
}
